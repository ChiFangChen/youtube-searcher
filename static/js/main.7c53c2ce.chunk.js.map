{"version":3,"sources":["modules/videos.ts","utils/variables.ts","modules/index.ts","middleware/fetchMiddleware.ts","utils/styles.ts","components/Spinner/styles.ts","components/Spinner/index.ts","components/Spinner/Spinner.tsx","components/LanguageSwitcher/styles.ts","components/LanguageSwitcher/index.ts","components/LanguageSwitcher/LanguageSwitcher.tsx","pages/Main/styles.ts","pages/Main/Main.tsx","pages/Main/index.ts","i18n.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["videosSelector","state","videos","initialState","isLoading","isDone","isError","data","nextPageToken","undefined","prevPageToken","pageInfo","totalResults","resultsPerPage","items","prefix","INIT","BUSY","DONE","FAIL","fetchDone","type","payload","getVideos","a","search","pageToken","count","query","qs","stringify","q","encodeURIComponent","key","process","maxResults","part","addQueryPrefix","url","axios","responseData","currentItems","nextResponse","videosReducer","action","map","item","id","videoId","img","snippet","thumbnails","high","title","rootReducer","combineReducers","fetchMiddleware","next","types","Success","Fail","Request","options","Promise","resolve","reject","get","then","response","catch","err","FlexCenter","css","CircularProgressWrapper","styled","div","wrapperHeight","Spinner","props","CircularProgress","disableShrink","className","LangBtnWrapper","LanguageSwitcher","prop","i18n","useTranslation","useState","showLangNav","setShowLangNav","langBtnRef","React","useRef","closeLangNav","switchLang","lang","changeLanguage","IconButton","ref","onClick","fontSize","Popper","open","anchorEl","current","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","selected","language","AppWrapper","SearchBlock","TextField","MaterialTextField","List","ListItem","Card","StyledSpinner","Pagination","MaterialPagination","Main","t","setSearch","page","setPage","searchRef","useSelector","dispatch","useDispatch","paginationCount","useMemo","Math","ceil","length","handleReset","useCallback","handleFetch","getState","result","readVideos","resetAndFetch","debounceFetch","debounce","useEffect","Typography","align","variant","component","label","value","onChange","e","target","Grid","container","spacing","slice","i","xs","sm","md","xl","CardActionArea","window","CardMedia","image","CardContent","event","color","use","Backend","initReactI18next","init","backend","loadPath","fallbackLng","lng","interpolation","escapeValue","store","createStore","composeWithDevTools","stateSanitizer","applyMiddleware","thunk","fetchMiddleWare","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.7c53c2ce.chunk.js","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\nimport { API_HOST, API_KEY, per_page } from 'utils/variables';\nimport { StoreTypes } from './index';\n\n// Selector\nexport const videosSelector = (state: StoreTypes): State => state.videos;\n\ninterface State {\n  isLoading: boolean;\n  isDone: boolean;\n  isError: boolean;\n  data: {\n    nextPageToken: undefined | string;\n    prevPageToken: undefined | string;\n    pageInfo: {\n      totalResults: undefined | number;\n      resultsPerPage: undefined | number;\n    };\n    items: {\n      id: string;\n      img: string;\n      title: string;\n    }[];\n  };\n}\n\n// Initial state\nconst initialState: State = {\n  isLoading: false,\n  isDone: false,\n  isError: false,\n  data: {\n    nextPageToken: undefined,\n    prevPageToken: undefined,\n    pageInfo: {\n      totalResults: undefined,\n      resultsPerPage: undefined,\n    },\n    items: [],\n  },\n};\n\n// Constants\nconst prefix = 'videos';\nexport const INIT = `${prefix}/INIT`;\nexport const BUSY = `${prefix}/BUSY`;\nexport const DONE = `${prefix}/DONE`;\nexport const FAIL = `${prefix}/FAIL`;\n\n// Reducer\nconst videosReducer = (state = initialState, action: any = {}) => {\n  switch (action.type) {\n    case INIT:\n      return {\n        ...initialState,\n      };\n    case BUSY:\n      return {\n        ...state,\n        isLoading: true,\n        isDone: false,\n        isError: false,\n      };\n    case FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        isDone: true,\n        isError: true,\n      };\n    case DONE:\n      return {\n        ...state,\n        isLoading: false,\n        isDone: true,\n        data: {\n          ...(state.data ? { ...state.data } : {}),\n          ...action.payload.data,\n          items: [\n            ...(state.data ? [...state.data.items] : []),\n            ...action.payload.data.items.map((item: any) => ({\n              id: item.id.videoId,\n              img: item.snippet.thumbnails.high.url,\n              title: item.snippet.title,\n            })),\n          ],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\n// Action Creators\n\ninterface Reset {\n  type: typeof INIT;\n}\n\nexport const reset = (): Reset => ({\n  type: INIT,\n});\n\ninterface Busy {\n  type: typeof BUSY;\n}\n\nexport const busy = (): Busy => ({\n  type: BUSY,\n});\n\ninterface FetchDonePayload {\n  data: any;\n}\n\ninterface FetchDone {\n  type: typeof DONE;\n  payload: FetchDonePayload;\n}\n\nexport const fetchDone = ({ data }: FetchDonePayload): FetchDone => ({\n  type: DONE,\n  payload: {\n    data,\n  },\n});\n\ninterface FetchFail {\n  type: typeof FAIL;\n}\n\nexport const fetchFail = (): FetchFail => ({\n  type: FAIL,\n});\n\n// call API\nconst getVideos = async ({\n  search,\n  pageToken,\n  count = 0,\n}: {\n  search: string;\n  pageToken: undefined | string;\n  count?: number;\n}) => {\n  const query = qs.stringify(\n    {\n      q: encodeURIComponent(search),\n      pageToken,\n      key: API_KEY,\n      maxResults: per_page,\n      part: 'snippet',\n    },\n    { addQueryPrefix: true },\n  );\n\n  const url = `${API_HOST}/search${query}`;\n\n  const {\n    data: responseData,\n    data: { nextPageToken, items },\n  } = await axios(url);\n  let currentItems = items;\n\n  count += 1;\n\n  if (nextPageToken && count < 5) {\n    const nextResponse: any = await getVideos({\n      search,\n      pageToken: nextPageToken,\n      count,\n    });\n    currentItems = [...currentItems, ...nextResponse.items];\n\n    return {\n      ...nextResponse,\n      items: currentItems,\n    };\n  }\n\n  return {\n    ...responseData,\n    items: currentItems,\n  };\n};\n\n// Thunk\ntype ReadVideosParameter = {\n  search: string;\n};\n\nexport const readVideos = ({ search }: ReadVideosParameter) => async (\n  dispatch: any,\n  getState: any,\n) => {\n  dispatch(busy());\n\n  const { nextPageToken: pageToken } = getState().videos.data;\n  try {\n    const result = await getVideos({ pageToken, search });\n    dispatch(fetchDone({ data: result }));\n  } catch (error) {\n    dispatch(fetchFail());\n  }\n};\n\nexport default videosReducer;\n","// env\nexport const API_HOST = process.env.REACT_APP_API_HOST;\nexport const API_KEY = process.env.REACT_APP_API_KEY;\n\n// settings\nexport const per_page = 48;\n\n// breakpoint\n// default will be started with XS_MIN\nexport const XS_MIN = '0px';\nexport const SM_MIN = '600px';\nexport const MD_MIN = '960px';\nexport const LG_MIN = '1280px';\nexport const XL_MIN = '1920px';\n","import { combineReducers } from 'redux';\nimport videosReducer from './videos';\n\nexport const rootReducer = combineReducers({\n  videos: videosReducer,\n});\n\nexport type StoreTypes = ReturnType<typeof rootReducer>;\n","import axios, { AxiosResponse } from 'axios';\n\n/*\n  {\n    types: [Success, Fail, Request]\n    options: {\n      url: string,\n      config: {},\n    }\n  }\n*/\n\n// Intercept specific action\n// This repo doesn't really use it ~\nconst fetchMiddleware = () => (next: any) => (action: any) => {\n  if (!action.types) {\n    return next(action);\n  }\n\n  const [Success, Fail, Request] = action.types;\n  const options = action.options;\n  next({\n    type: Request,\n  });\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(options.url)\n      .then(function (response: AxiosResponse<any>) {\n        next({\n          type: Success,\n          payload: {\n            data: response.data,\n          },\n        });\n\n        resolve(true);\n      })\n      .catch((err) => {\n        next({\n          type: Fail,\n        });\n\n        reject(err);\n      });\n  });\n};\n\nexport default fetchMiddleware;\n","import { css } from 'styled-components';\n\nexport const FlexCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nimport { FlexCenter } from 'utils/styles';\n\nimport { SpinnerType } from './types';\n\nexport const CircularProgressWrapper = styled.div<SpinnerType>`\n  ${FlexCenter}\n  ${({ wrapperHeight }) => wrapperHeight && `height: ${wrapperHeight};`}\n\n  .circular {\n    margin: 20px 0;\n    color: thistle;\n  }\n`;\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import React, { FC } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { SpinnerType } from './types';\nimport { CircularProgressWrapper } from './styles';\n\nconst Spinner: FC<SpinnerType> = ({ isLoading = true, ...props }) => {\n  return isLoading ? (\n    <CircularProgressWrapper {...props}>\n      <CircularProgress disableShrink className=\"circular\" />\n    </CircularProgressWrapper>\n  ) : null;\n};\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const LangBtnWrapper = styled.div`\n  z-index: 999;\n  position: fixed;\n  right: 5px;\n  top: 5px;\n`;\n","import LanguageSwitcher from './LanguageSwitcher';\n\nexport default LanguageSwitcher;\n","import React, { FC, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Popper,\n  Grow,\n  Paper,\n  ClickAwayListener,\n  MenuList,\n  MenuItem,\n  IconButton,\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nimport { LangBtnWrapper } from './styles';\n\nconst LanguageSwitcher: FC = (prop) => {\n  const { i18n } = useTranslation();\n\n  const [showLangNav, setShowLangNav] = useState(false);\n\n  const langBtnRef = React.useRef(null);\n\n  const openLangNav = () => setShowLangNav(true);\n  const closeLangNav = () => setShowLangNav(false);\n\n  const switchLang = (lang: 'en' | 'zh-tw') => () => {\n    i18n.changeLanguage(lang);\n    closeLangNav();\n  };\n\n  return (\n    <LangBtnWrapper {...prop}>\n      <IconButton ref={langBtnRef} onClick={openLangNav}>\n        <LanguageIcon fontSize=\"small\" />\n      </IconButton>\n\n      <Popper\n        open={showLangNav}\n        anchorEl={langBtnRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={closeLangNav}>\n                <MenuList>\n                  <MenuItem onClick={switchLang('en')} selected={i18n.language === 'en'}>\n                    English\n                  </MenuItem>\n                  <MenuItem onClick={switchLang('zh-tw')} selected={i18n.language === 'zh-tw'}>\n                    繁體中文\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </LangBtnWrapper>\n  );\n};\n\nexport default LanguageSwitcher;\n","import styled from 'styled-components';\nimport { TextField as MaterialTextField, Card } from '@material-ui/core';\nimport MaterialPagination from '@material-ui/lab/Pagination';\n\nimport { SM_MIN, MD_MIN, LG_MIN } from 'utils/variables';\nimport Spinner from 'components/Spinner';\n\nexport const AppWrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding-top: 25px;\n`;\n\nexport const SearchBlock = styled.div`\n  margin: 0 25px 25px;\n\n  > div {\n    width: 100%;\n  }\n`;\n\nexport const TextField = styled(MaterialTextField)`\n  &.input {\n    .Mui-focused {\n      &.MuiFormLabel-root {\n        color: #914191;\n      }\n      &.MuiInput-underline:after,\n      &.MuiInput-underline:before {\n        border-bottom-color: #914191;\n      }\n    }\n    .MuiInput-underline:hover:not(.Mui-disabled):before,\n    .MuiInput-underline:hover:after {\n      border-bottom: 2px solid #914191;\n    }\n  }\n`;\n\nexport const List = styled.div`\n  margin-top: 25px;\n  flex: 1;\n  overflow: scroll;\n`;\n\nexport const ListItem = styled(Card)`\n  color: #000;\n  background-color: whitesmoke;\n  text-decoration: none;\n\n  .action-area {\n    padding: 25px;\n  }\n\n  &:visited {\n    color: #999;\n  }\n\n  &:hover {\n    color: #fff;\n    background-color: thistle;\n\n    &:visited {\n      background-color: #d2aed2;\n    }\n  }\n\n  .image {\n    height: 300px;\n\n    @media (min-width: ${SM_MIN}) {\n      height: 200px;\n    }\n\n    @media (min-width: ${MD_MIN}) {\n      height: 180px;\n    }\n\n    @media (min-width: ${LG_MIN}) {\n      height: 300px;\n    }\n  }\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  margin-top: 12px;\n`;\n\nexport const Pagination = styled(MaterialPagination)`\n  display: flex;\n  justify-content: center;\n  margin: 30px 0;\n`;\n","import React, { ChangeEvent, useState, useCallback, useMemo, useEffect, useRef } from 'react';\nimport { debounce } from 'ts-debounce';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, CardActionArea, CardContent, CardMedia, Grid } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { videosSelector, readVideos, reset } from 'modules/videos';\nimport LanguageSwitcher from 'components/LanguageSwitcher';\n\nimport {\n  AppWrapper,\n  SearchBlock,\n  TextField,\n  List,\n  ListItem,\n  StyledSpinner,\n  Pagination,\n} from './styles';\n\nconst uiPerPage = 24;\n\nfunction Main() {\n  /* i18n */\n\n  const { t } = useTranslation();\n\n  /* main data */\n\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const searchRef = useRef(search);\n  searchRef.current = search;\n\n  const { isLoading, data } = useSelector(videosSelector);\n  const dispatch = useDispatch();\n\n  const paginationCount = useMemo(() => Math.ceil(data.items.length / uiPerPage), [\n    data.items.length,\n  ]);\n\n  const handleReset = useCallback(() => dispatch(reset()), [dispatch]);\n\n  const handleFetch = useCallback(() => {\n    dispatch(\n      readVideos({\n        search: searchRef.current,\n      }),\n    );\n  }, [dispatch, searchRef]);\n\n  const resetAndFetch = useCallback(() => {\n    // init page\n    handleReset();\n    setPage(1);\n\n    handleFetch();\n  }, [setPage, handleReset, handleFetch]);\n\n  const debounceFetch = useCallback(debounce(resetAndFetch, 500), []);\n\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n    debounceFetch();\n  };\n\n  const goYoutube = (id: string) => () => {\n    window.open(`https://www.youtube.com/watch?v=${id}`);\n  };\n\n  const onPaginationChange = (event: object, page: number) => setPage(page);\n\n  // when clicking the last page button, load more data\n  useEffect(() => {\n    if (page === paginationCount && data.pageInfo.resultsPerPage) handleFetch();\n  }, [page, paginationCount, data.pageInfo.resultsPerPage, handleFetch]);\n\n  return (\n    <AppWrapper>\n      <Typography align=\"center\" variant=\"h3\" component=\"h1\">\n        {t('heading')}\n      </Typography>\n\n      <LanguageSwitcher />\n\n      <SearchBlock>\n        <TextField\n          label={t('label')}\n          value={search}\n          onChange={handleSearchChange}\n          className=\"input\"\n        />\n      </SearchBlock>\n\n      <List>\n        <Grid container spacing={3}>\n          {data.items\n            .slice((page - 1) * uiPerPage, page * uiPerPage)\n            .map((item: any, i: number) => (\n              <Grid item xs={12} sm={6} md={4} xl={3} key={`${item.id}${i}`}>\n                <ListItem>\n                  <CardActionArea className=\"action-area\" onClick={goYoutube(item.id)}>\n                    <CardMedia image={item.img} title={item.title} className=\"image\" />\n                    <CardContent>\n                      <Typography component=\"h5\" align=\"center\">\n                        {item.title}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </ListItem>\n              </Grid>\n            ))}\n        </Grid>\n\n        <StyledSpinner isLoading={isLoading && !data.nextPageToken} />\n      </List>\n\n      {paginationCount && (\n        <Pagination\n          page={page}\n          onChange={onPaginationChange}\n          count={paginationCount}\n          color=\"secondary\"\n        />\n      )}\n    </AppWrapper>\n  );\n}\n\nexport default Main;\n","import Main from './Main';\n\nexport default Main;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\n\ni18n\n  // 使用 i18next-http-backend\n  .use(Backend)\n  // 將 i18next 傳入 react-i18next 裡面\n  .use(initReactI18next)\n  // 實例化 initReactI18next\n  .init({\n    backend: {\n      //網頁載入時去下載語言檔的位置\n      loadPath: './locales/{{lng}}/{{ns}}.json',\n    },\n    // 當目前的語言檔找不到對應的字詞時，會用 fallbackLng (en) 作為預設語言\n    fallbackLng: 'en',\n    // 預設語言\n    lng: 'en',\n    interpolation: {\n      // 是否要讓字詞 escaped 來防止 xss 攻擊，這裡因為 React.js 已經做了，就設成 false即可\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport 'fontsource-roboto';\nimport 'normalize.css';\n\nimport { rootReducer } from 'modules';\nimport fetchMiddleWare from 'middleware/fetchMiddleware';\nimport Spinner from 'components/Spinner';\nimport Main from 'pages/Main';\nimport 'i18n.ts';\nimport 'index.css';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools({\n    stateSanitizer: (state) => state,\n  })(applyMiddleware(thunk, fetchMiddleWare)),\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Suspense fallback={<Spinner wrapperHeight=\"100vh\" />}>\n        <Main />\n      </Suspense>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById('root') as HTMLElement;\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}